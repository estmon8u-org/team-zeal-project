###############################################################################
# Workflow  : Continuous Machine Learning (CML) Reporting
# Triggered :
#   • workflow_run → after docker-train-lint completes successfully on main, develop
#   • manual run  → workflow_dispatch
# Purpose   :
#   1. Download trained model artifacts from docker-train-lint workflow
#   2. Generate visual metrics reports (accuracy plots, loss curves)
#   3. Post reports as comments to related PRs or commits
#   4. Enable ML-focused code review with performance metrics visibility
###############################################################################

name: CML Report

on:
  workflow_run:
    workflows: ["docker-train-lint"]
    types:
      - completed
    branches: [main, develop]
  workflow_dispatch:

jobs:
  generate-report:
    name: Generate CML Report
    # Only run if the docker-train-lint workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on:
      group: default
      labels: ubuntu-latest-m
    timeout-minutes: 30  # Reduced since we're not training again
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Check out the PR that triggered the workflow_run
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: Setup CML
        uses: iterative/setup-cml@v1

      - name: Download training artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: docker-train-lint.yml
          workflow_conclusion: success
          name: cml-artifacts
          # Use the same run ID that triggered this workflow
          run_id: ${{ github.event.workflow_run.id }}
          path: ./

      - name: Display downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -la cml_plots/ || echo "cml_plots directory not found"
          ls -la *.json || echo "No JSON files found in root directory"

      - name: Generate CML Report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Model Training Results" > report.md
          echo "### Metrics Summary" >> report.md

          # Add metrics from JSON
          if [ -f "cml_metrics.json" ]; then
            BEST_ACC=$(cat cml_metrics.json | jq -r .best_val_accuracy)
            FINAL_ACC=$(cat cml_metrics.json | jq -r .final_val_accuracy)
            FINAL_LOSS=$(cat cml_metrics.json | jq -r .final_val_loss)
            TRAIN_TIME=$(cat cml_metrics.json | jq -r .total_training_time_sec)
            BEST_EPOCH=$(cat cml_metrics.json | jq -r .best_epoch)
            MODEL_NAME=$(cat cml_metrics.json | jq -r .model_name)
            EPOCHS_COMPLETED=$(cat cml_metrics.json | jq -r .epochs_completed)

            echo "| Metric | Value |" >> report.md
            echo "| --- | --- |" >> report.md
            echo "| Model | ${MODEL_NAME} |" >> report.md
            echo "| Best Validation Accuracy | ${BEST_ACC}% (epoch ${BEST_EPOCH}) |" >> report.md
            echo "| Final Validation Accuracy | ${FINAL_ACC}% |" >> report.md
            echo "| Final Validation Loss | ${FINAL_LOSS} |" >> report.md
            echo "| Training Time | ${TRAIN_TIME} seconds |" >> report.md
            echo "| Epochs Completed | ${EPOCHS_COMPLETED} |" >> report.md
          else
            echo " No metrics file found. Training may have failed." >> report.md
            echo "Listing directory contents for debugging:" >> report.md
            echo "\`\`\`" >> report.md
            find . -type f -name "*.json" | sort >> report.md
            echo "\`\`\`" >> report.md
          fi

          echo -e "\n### Learning Curves" >> report.md

          # Add plots
          if [ -f "cml_plots/loss_plot.png" ]; then
            echo "#### Training & Validation Loss" >> report.md
            cml-publish cml_plots/loss_plot.png --md >> report.md
          else
            echo " Loss plot file not found. Check if training completed successfully." >> report.md
            echo "Listing cml_plots directory for debugging:" >> report.md
            echo "\`\`\`" >> report.md
            find . -name "cml_plots" -type d -exec ls -la {} \; >> report.md
            echo "\`\`\`" >> report.md
          fi

          if [ -f "cml_plots/accuracy_plot.png" ]; then
            echo "#### Validation Accuracy" >> report.md
            cml-publish cml_plots/accuracy_plot.png --md >> report.md
          else
            echo " Accuracy plot file not found." >> report.md
          fi

          echo -e "\n### Workflow Information" >> report.md
          echo "- Run triggered by: ${{ github.event_name }}" >> report.md
          echo "- Workflow: docker-train-lint → CML Report" >> report.md
          echo "- Report generated: $(date)" >> report.md

          # Post the report as a comment on the PR
          # Get PR number from the workflow run event
          PR_NUMBER=$(jq -r '.pull_requests[0].number // empty' <<< '${{ toJson(github.event.workflow_run) }}')
          if [ -n "$PR_NUMBER" ]; then
            echo "Posting report to PR #${PR_NUMBER}"
            cml comment create report.md --target-pull-request $PR_NUMBER
          else
            echo "No PR number found, posting report to commit"
            cml comment create report.md
          fi
